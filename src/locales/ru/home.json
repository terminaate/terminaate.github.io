{
  "name_comment": "Имя",
  "profession_comment": "Профессия",
  "about-me_title": "Обо мне",
  "about-me_text": "Я молодой веб-разработчик, проживающий в России (Краснодар), большую часть времени посвящаю разработке собственных небольших проектов и самосовершенствованию, веб-разработкой занимаюсь около 2-х лет, за это время попробовал Frontend и Backend направления, Backend пишу только на Node.js (Nest/Express), в области Frontend имею большой опыт написания React приложений, поэтому сейчас позиционирую себя как React frontend разработчик.",
  "works-button_text": "Моё портфолио",
  "react_text": "React - мой основной веб фреймворк на котором я больше всего работаю, знаю много библиотек под него такие как react-router-dom, framer-motion, react-redux, react-transition-group, react-i18next, react-syntax-highlighter, @react-fiber/three, и ещё куча других библиотек предназначеных для React.",
  "html_text": "HTML - стандатрный язык разметки который поддерживают большиство браузеров. Основа любого Frontend приложения.",
  "pug_text": "Pug - препроцессор HTML, у меня с ним был довольно короткий опыт работы, примерно месяц я писал на нём, при необходимости могу писать на нём.",
  "css_text": "CSS - стандартный язык каскадных стилей который поддерживают большниство браузеров. Второй основной предмет любого Frontend приложения.",
  "sass_text": "SASS - препроцессор CSS, пишу на нём уже относительно долгое время, довольно не плохой препроцессор который сильно уменьшает количество кода.",
  "less_text": "Less - ещё один препроцессор CSS, знаю его только в теории, на практике никогда не применял, как по мне довольно сильно похож на SCSS",
  "bootstrap_text": "Bootstrap - одна из самых популярных UI библиотек, у меня с ней довольно мало опыта использования, но при необходимости спокойно могу на ней писать.",
  "javascript_text": "Javascript - язык программирования на котором держиться вся web индустрия, на нём работают большинство сайтов в интеренет.",
  "jquery_text": "Jquery - библоитека для Javascript, используеться для облегчения работы с ним, я начинал с неё, первые сайты делал на ней",
  "typescript_text": "Typescript - мой основной язык программирования, его я использую чаще всего, в большнистве своих проектах я использую Typescript, и у меня довольно хорошие знания этого языка",
  "vite_text": "Vite - инструмент для сборки модулей Javascript, который помимо сборки модулей Javascript ещё занимаеться бандлингом кода, мой основной инстурмент в сборки и банлинге моих проектов",
  "webpack_text": "Webpack - один из самых популярных сборщиков модулей Javascript, работал с ним довольно часто, при необходимости могу его настроить",
  "gulp_text": "Gulp - ещё один сборщик модулей, был опыт в его конфигурации единожды, когда собирал свою собственную сборку на vue",
  "redux_text": "Redux - глобальный менеджер состояния который даёт нам Flux архитектуру, в больнистве случаев используеться вместе с React, есть довольно большой опыт использвания его, а так-же redux/toolkit",
  "mobx_text": "Mobx - ещё один глобальный менеджер состояния, с ним у меня опыта довольно мало, мне в этом плане больше приятен redux со своей архитектурой",
  "next_text": "Next - фреймворк который основан на React, с ним довольно таки мало опыта, но понимаю какие проблемы решает и как на нём писать",
  "vue_text": "Vue - мой второй основной веб фреймворк, на нём я писал всего около 4 месяцев, за это время я понял его концепции, как на нём писать, ознакомился с глобальным менеджером состояния vuex, а так-же писал роутинг на vue-router",
  "three_text": "Three - библиотека для создания 3D сцен используя WebGL, её изучение я начал недавно и практики с ней у меня довольно таки мало",
  "framer-motion_text": "Framer motion - библиотка для React, используеться для создания плавных красивых и простых в разработке анимаций, с ней у меня довольно таки много опыта, так-что могу спокойно на ней писать при необходимости",
  "node.js_text": "Node.js - javascript runtime, мой основной инструмент для написания бэкенда на Javascript, знаю его примерно уже год",
  "express.js_text": "Express.js - Node.js фреймворк для написания бэкенда, я начинал писать бэкенд имено с него, и первый мой проект на Node.js был бэкенд для моего тогдашнего проекта",
  "nest.js_text": "Nest.js - ещё один Node.js фреймворк, он основан на Express.js и использует архитектуру Angular MVC(Module View Controller), только в данном случае вместо View, уместно сказать Service.",
  "electron.js_text": "Electron.js - фреймворк для написания Desktop приложений на Node.js, использовал его единожды в свовём проекте Valcher, понимаю концепции и как на нём писать.",
  "mongodb_text": "Mongodb - одна из самых популярных не реляционных баз данных, с ней у меня довольно таки много опыта, и я часто её использую когда пишу Backend часть приложения",
  "sqlite3_text": "Sqlite3 - одна из самых популярных реляционных баз данных, с ней у меня как и с Mongodb относительно много опыта, зачастую всегда исползую с Sequelize ORM.",
  "postgresql_text": "Postgresql - для меня это аналог Mongodb только если бы она была не реляционной, с ней довольно мало опыта, но при не обходимости могу с ней работать, так же как и с Sqlite3 всегда использую эту базу данных вместе с Sequelize ORM",
  "mysql_text": "Mysql - наверно самая популярная не реляционная база данных, с ней так-же как и с Postgresql у меня довольно таки мало опыта, запускал её единожды, после этого не использовал, так-же с ней работал в связке с Sequelize ORM",
  "sequelize_text": "Sequelize - одна из самых популярных TypeORM для не реляционных баз данных, есть относительно продолжительный опыт с этой ORM",
  "mongoose_text": "Mongoose - спецаильно написанная для Mongodb ORM, которая ещё больше облегчает работу с Mongodb, и превносит систему моделей",
  "solid_text": "SOLID - один из самых популярных принципов разработки приложений, понимаю концепции который предлагает SOLID, какие проблемы он решает, и какими методами, так-что я почти на постоянной основе использую его.",
  "dry_text": "DRY(Don't Repeat Yourself) - принцип не повторения себя, например у вас есть два куска кода которые почти идентичны и с помощью этого принципа вы просто создадите функцию и будете её вызывать в этих двух местах, прицнип довольно лёгкий но полезный, использую его на постоянной практики",
  "kiss_text": "KISS(Keep it simple stupid) - принцип не писания излишней функциональности, и придерживания оригинальной задумки и оригиниальной функциональности, так-же исплоьзую его часто",
  "yagni_text": "YAGNI(You Aren't Gonna Need it) - этот принцип чем-то схож с KISS, но он больше про упрощения кода, тоесть вместо того чтобы пойти сложным путём, он говорит идти путём лёгким, ну это основная его концепция",
  "git_text": "Git - одна из самых популярных систем контроля версий"
}
